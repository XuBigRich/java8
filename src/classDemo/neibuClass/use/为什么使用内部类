1.内部类

首先举一个简单的例子，如果你想实现一个接口，但是这个接口中的一个方法和你构想的这个类中的一个 方法的名称，参数相同，你应该怎么办？这时候，你可以建一个内部类实现这个接口。由于内部类对外部类的所有内容都是可访问的，所以这样做可以完成所有你直 接实现这个接口的功能。
         不过你可能要质疑，更改一下方法的不就行了吗？
        的确，以此作为设计内部类的理由，实在没有说服 力。
        真正的原因是这样的，java中的内部类和接口加在一起，可以的解决常被C++程序员抱怨java中存在的一个问题——没有多继承。实际上，C++的多继承设计起来很复杂，而java通过内部类加上接口，可以很好的实现多继承的效果。
        内部类：一个内部类的定义是定义在另一个内部的类。
原因是：
1.一个内部类的对象能够访问创建它的对象的实现，包括私有数据。
2. 对于同一个包中的其他类来说，内部类能够隐藏起来。
3.匿名内部类可以很方便的定义回调。
4.使用内部类可以非常方便的编写事件驱动程序

       内部类可以让你更优雅地设计你的程序结构。下面从以下几个方面来介绍：